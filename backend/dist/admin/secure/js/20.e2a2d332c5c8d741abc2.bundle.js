(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{838:function(t,e,i){"use strict";i.r(e);var a=i(6),n=i(23),l=i(221),c=i.n(l),s=function t(e,i,l,s){var r=this;Object(n.a)(this,t),Object(a.a)(this,"getQueryFragment",(function(){return r.path})),Object(a.a)(this,"serialize",(function(t){return t[r.path]||null})),Object(a.a)(this,"validateInput",(function(){})),Object(a.a)(this,"deserialize",(function(t){return t[r.path]})),Object(a.a)(this,"hasChanged",(function(t,e){return!c()(t[r.path],e[r.path])})),Object(a.a)(this,"getDefaultValue",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.originalInput,i=void 0===e?{}:e,a=t.prefill,n=void 0===a?{}:a;return r._getDefaultValue({originalInput:i,prefill:n})})),Object(a.a)(this,"initCellView",(function(){var t=r.views.Cell;t&&r.adminMeta.readViews([t])})),Object(a.a)(this,"initFieldView",(function(){var t=r.views.Field;t&&r.adminMeta.readViews([t])})),Object(a.a)(this,"initFilterView",(function(){var t=r.views.Filter;t&&r.adminMeta.readViews([t])})),Object(a.a)(this,"getFilterTypes",(function(){return[]})),this.config=e,this.label=e.label,this.path=e.path,this.type=e.type,this.maybeAccess=e.access,this.isPrimaryKey=e.isPrimaryKey,this.list=i,this.adminMeta=l,this.views=s,"defaultValue"in e?"function"!=typeof e.defaultValue?this._getDefaultValue=function(t){return t.prefill[r.path]||e.defaultValue}:this._getDefaultValue=e.defaultValue:this._getDefaultValue=function(t){return t.prefill[r.path]||void 0}};e.default=class extends s{constructor(...t){super(...t),Object(a.a)(this,"getFilterGraphQL",({type:t,value:e})=>{switch(t){case"is":return"".concat(this.path,': "').concat(e,'"');case"not":return"".concat(this.path,'_not: "').concat(e,'"');case"in":return"".concat(this.path,"_in: [").concat(e.split(",").map(t=>'"'.concat(t.trim(),'"')).join(","),"]");case"not_in":return"".concat(this.path,"_not_in: [").concat(e.split(",").map(t=>'"'.concat(t.trim(),'"')).join(","),"]")}}),Object(a.a)(this,"getFilterLabel",({label:t,type:e})=>{let i="";return["in","not_in"].includes(e)&&(i=" (comma separated)"),"".concat(this.label," ").concat(t.toLowerCase()).concat(i)}),Object(a.a)(this,"formatFilter",({label:t,type:e,value:i})=>{let a=i;return["in","not_in"].includes(e)&&(a=i.split(",").map(t=>t.trim()).join(", ")),"".concat(this.label," ").concat(t.toLowerCase(),": ").concat(a)}),Object(a.a)(this,"getFilterTypes",()=>[{type:"is",label:"Is exactly",getInitialValue:()=>""},{type:"not",label:"Is not",getInitialValue:()=>""},{type:"in",label:"Is one of",getInitialValue:()=>""},{type:"not_in",label:"Is not one of",getInitialValue:()=>""}])}}}}]);