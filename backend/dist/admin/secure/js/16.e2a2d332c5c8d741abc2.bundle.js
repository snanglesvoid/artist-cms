(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{222:function(t,e,a){"use strict";var i=a(6),l=a(23),n=a(221),s=a.n(n);e.a=function t(e,a,n,r){var c=this;Object(l.a)(this,t),Object(i.a)(this,"getQueryFragment",(function(){return c.path})),Object(i.a)(this,"serialize",(function(t){return t[c.path]||null})),Object(i.a)(this,"validateInput",(function(){})),Object(i.a)(this,"deserialize",(function(t){return t[c.path]})),Object(i.a)(this,"hasChanged",(function(t,e){return!s()(t[c.path],e[c.path])})),Object(i.a)(this,"getDefaultValue",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.originalInput,a=void 0===e?{}:e,i=t.prefill,l=void 0===i?{}:i;return c._getDefaultValue({originalInput:a,prefill:l})})),Object(i.a)(this,"initCellView",(function(){var t=c.views.Cell;t&&c.adminMeta.readViews([t])})),Object(i.a)(this,"initFieldView",(function(){var t=c.views.Field;t&&c.adminMeta.readViews([t])})),Object(i.a)(this,"initFilterView",(function(){var t=c.views.Filter;t&&c.adminMeta.readViews([t])})),Object(i.a)(this,"getFilterTypes",(function(){return[]})),this.config=e,this.label=e.label,this.path=e.path,this.type=e.type,this.maybeAccess=e.access,this.isPrimaryKey=e.isPrimaryKey,this.list=a,this.adminMeta=n,this.views=r,"defaultValue"in e?"function"!=typeof e.defaultValue?this._getDefaultValue=function(t){return t.prefill[c.path]||e.defaultValue}:this._getDefaultValue=e.defaultValue:this._getDefaultValue=function(t){return t.prefill[c.path]||void 0}}},828:function(t,e,a){"use strict";a.r(e);var i=a(6),l=(a(23),a(221),a(222));class n extends l.a{constructor(...t){super(...t),Object(i.a)(this,"getFilterGraphQL",({path:t,type:e,value:a})=>{const i="is"===e?t:"".concat(t,"_").concat(e);let l=a.replace(/\s/g,"");return["in","not_in"].includes(e)&&(l="[".concat(l,"]")),"".concat(i,": ").concat(l)}),Object(i.a)(this,"getFilterLabel",({label:t,type:e})=>{const a=["in","not_in"].includes(e)?" (comma separated)":"";return"".concat(this.label," ").concat(t.toLowerCase()).concat(a)}),Object(i.a)(this,"formatFilter",({label:t,type:e,value:a})=>"".concat(this.getFilterLabel({label:t,type:e}),': "').concat(a.replace(/\s/g,""),'"')),Object(i.a)(this,"serialize",t=>{const e=t[this.path];return"number"==typeof e?e:"string"==typeof e&&e.length>0?parseInt(e,10):null}),Object(i.a)(this,"getFilterTypes",()=>[{type:"is",label:"Is exactly",getInitialValue:()=>""},{type:"not",label:"Is not exactly",getInitialValue:()=>""},{type:"gt",label:"Is greater than",getInitialValue:()=>""},{type:"lt",label:"Is less than",getInitialValue:()=>""},{type:"gte",label:"Is greater than or equal to",getInitialValue:()=>""},{type:"lte",label:"Is less than or equal to",getInitialValue:()=>""},{type:"in",label:"Is one of",getInitialValue:()=>""},{type:"not_in",label:"Is not one of",getInitialValue:()=>""}])}}e.default=n}}]);